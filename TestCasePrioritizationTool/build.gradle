/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    mavenCentral()
}

repositories {
    maven {
        url "https://packagecloud.io/cgavidia/isula/maven2"
    }
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore', version: '2.23.0'
	compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.common', version: '2.21.0'
	compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi', version: '2.16.0'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'org.eclipse.epsilon', name: 'org.eclipse.epsilon.eol.engine', version: '2.2.0'
    compile 'isula:isula:0.0.1-SNAPSHOT'
    
    extraLibs group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore', version: '2.23.0'
    extraLibs group: 'org.eclipse.emf', name: 'org.eclipse.emf.common', version: '2.21.0'
    extraLibs group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi', version: '2.16.0'
    extraLibs group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    extraLibs group: 'org.eclipse.epsilon', name: 'org.eclipse.epsilon.eol.engine', version: '2.2.0'
    extraLibs 'isula:isula:0.0.1-SNAPSHOT'
}

jar {
    archiveBaseName = 'TestCasePrioritizationTool'
    archiveVersion =  '0.1.0'
    
    manifest {
        attributes(
                'Main-Class': 'tcp_tool.TestCasePrioritizer'
        )
    }
    
    from {
            configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
}

apply plugin: 'java'
apply plugin: 'application'

sourceSets.main.java.srcDirs = ['src']

task copyModels(type: Copy) {
	from "test_cases" 
    into "build/classes/java/main/test_cases"
}

compileJava.dependsOn copyModels

mainClassName = 'tcp_tool.TestCasePrioritizer'
